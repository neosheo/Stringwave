services:
  stringwave:
    build: 
      context: .
    image: stringwave:latest
    container_name: stringwave
    restart: unless-stopped
    user: stringwave
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - stringwave
    volumes:
      - ./radio:/stringwave/radio
      - logs:/stringwave/logs
      - ./dl_data:/stringwave/dl_data/
      - ./webapp/instance/:/stringwave/webapp/instance/
    environment:
      - FLASK_SECRET_KEY=${FLASK_SECRET_KEY}
      - NUM_DAILY_DOWNLOADS=${NUM_DAILY_DOWNLOADS}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - DISCOGS_PERSONAL_ACCESS_TOKEN=${DISCOGS_PERSONAL_ACCESS_TOKEN}
    ports:
      - 5801:5801
      - 5802:5802

  gateway:
    image: nginxinc/nginx-unprivileged:latest
    container_name: stringwave-nginx
    depends_on:
      - stringwave
    networks:
      - stringwave
    restart: unless-stopped
    ports:
      - 10004:8080
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro

  celery:
    build:
      context: .
      dockerfile: Dockerfile-celery
    image: stringwave-celery:latest
    container_name: stringwave-celery
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - stringwave
    restart: unless-stopped
    volumes:
      - ./radio:/stringwave/radio
      - logs:/stringwave/logs
      - ./dl_data:/stringwave/dl_data/
      - ./webapp/instance/:/stringwave/webapp/instance/
    environment:
      - NUM_DAILY_DOWNLOADS=${NUM_DAILY_DOWNLOADS}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}


  rabbitmq:
    image: rabbitmq:latest
    container_name: stringwave-rabbitmq
    hostname: rabbitmq
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q check_virtual_hosts"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 30s
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    networks:
      stringwave:
    restart: unless-stopped

  icecast:
    build: 
      context: .
      dockerfile: Dockerfile-icecast
    image: stringwave-icecast:latest
    container_name: stringwave-icecast
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      stringwave:
    restart: unless-stopped

networks:
  stringwave:
    driver: bridge
    ipam:
      config:
        - subnet: 172.10.10.0/24

volumes:
  logs:
